package ru.hyst329.helengine

import java.nio.{ByteBuffer, ByteOrder}

import ru.hyst329.helengine.Global._

import scala.annotation.tailrec
import scala.io.Source

object MagicBitBoards {
  val KingPatterns: Array[BitBoard] = Array(
    0x0000000000000302L, 0x0000000000000705L, 0x0000000000000E0AL, 0x0000000000001C14L,
    0x0000000000003828L, 0x0000000000007050L, 0x000000000000E0A0L, 0x000000000000C040L,
    0x0000000000030203L, 0x0000000000070507L, 0x00000000000E0A0EL, 0x00000000001C141CL,
    0x0000000000382838L, 0x0000000000705070L, 0x0000000000E0A0E0L, 0x0000000000C040C0L,
    0x0000000003020300L, 0x0000000007050700L, 0x000000000E0A0E00L, 0x000000001C141C00L,
    0x0000000038283800L, 0x0000000070507000L, 0x00000000E0A0E000L, 0x00000000C040C000L,
    0x0000000302030000L, 0x0000000705070000L, 0x0000000E0A0E0000L, 0x0000001C141C0000L,
    0x0000003828380000L, 0x0000007050700000L, 0x000000E0A0E00000L, 0x000000C040C00000L,
    0x0000030203000000L, 0x0000070507000000L, 0x00000E0A0E000000L, 0x00001C141C000000L,
    0x0000382838000000L, 0x0000705070000000L, 0x0000E0A0E0000000L, 0x0000C040C0000000L,
    0x0003020300000000L, 0x0007050700000000L, 0x000E0A0E00000000L, 0x001C141C00000000L,
    0x0038283800000000L, 0x0070507000000000L, 0x00E0A0E000000000L, 0x00C040C000000000L,
    0x0302030000000000L, 0x0705070000000000L, 0x0E0A0E0000000000L, 0x1C141C0000000000L,
    0x3828380000000000L, 0x7050700000000000L, 0xE0A0E00000000000L, 0xC040C00000000000L,
    0x0203000000000000L, 0x0507000000000000L, 0x0A0E000000000000L, 0x141C000000000000L,
    0x2838000000000000L, 0x5070000000000000L, 0xA0E0000000000000L, 0x40C0000000000000L
  )

  val KnightPatterns: Array[BitBoard] = Array(
    0x0000000000020400L, 0x0000000000050800L, 0x00000000000A1100L, 0x0000000000142200L,
    0x0000000000284400L, 0x0000000000508800L, 0x0000000000A01000L, 0x0000000000402000L,
    0x0000000002040004L, 0x0000000005080008L, 0x000000000A110011L, 0x0000000014220022L,
    0x0000000028440044L, 0x0000000050880088L, 0x00000000A0100010L, 0x0000000040200020L,
    0x0000000204000402L, 0x0000000508000805L, 0x0000000A1100110AL, 0x0000001422002214L,
    0x0000002844004428L, 0x0000005088008850L, 0x000000A0100010A0L, 0x0000004020002040L,
    0x0000020400040200L, 0x0000050800080500L, 0x00000A1100110A00L, 0x0000142200221400L,
    0x0000284400442800L, 0x0000508800885000L, 0x0000A0100010A000L, 0x0000402000204000L,
    0x0002040004020000L, 0x0005080008050000L, 0x000A1100110A0000L, 0x0014220022140000L,
    0x0028440044280000L, 0x0050880088500000L, 0x00A0100010A00000L, 0x0040200020400000L,
    0x0204000402000000L, 0x0508000805000000L, 0x0A1100110A000000L, 0x1422002214000000L,
    0x2844004428000000L, 0x5088008850000000L, 0xA0100010A0000000L, 0x4020002040000000L,
    0x0400040200000000L, 0x0800080500000000L, 0x1100110A00000000L, 0x2200221400000000L,
    0x4400442800000000L, 0x8800885000000000L, 0x100010A000000000L, 0x2000204000000000L,
    0x0004020000000000L, 0x0008050000000000L, 0x00110A0000000000L, 0x0022140000000000L,
    0x0044280000000000L, 0x0088500000000000L, 0x0010A00000000000L, 0x0020400000000000L
  )

  val WhitePawnMovePatterns: Array[BitBoard] = Array(
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L,
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L,
    0x0000000001010000L, 0x0000000002020000L, 0x0000000004040000L, 0x0000000008080000L,
    0x0000000010100000L, 0x0000000020200000L, 0x0000000040400000L, 0x0000000080800000L,
    0x0000000001000000L, 0x0000000002000000L, 0x0000000004000000L, 0x0000000008000000L,
    0x0000000010000000L, 0x0000000020000000L, 0x0000000040000000L, 0x0000000080000000L,
    0x0000000100000000L, 0x0000000200000000L, 0x0000000400000000L, 0x0000000800000000L,
    0x0000001000000000L, 0x0000002000000000L, 0x0000004000000000L, 0x0000008000000000L,
    0x0000010000000000L, 0x0000020000000000L, 0x0000040000000000L, 0x0000080000000000L,
    0x0000100000000000L, 0x0000200000000000L, 0x0000400000000000L, 0x0000800000000000L,
    0x0001000000000000L, 0x0002000000000000L, 0x0004000000000000L, 0x0008000000000000L,
    0x0010000000000000L, 0x0020000000000000L, 0x0040000000000000L, 0x0080000000000000L,
    0x0100000000000000L, 0x0200000000000000L, 0x0400000000000000L, 0x0800000000000000L,
    0x1000000000000000L, 0x2000000000000000L, 0x4000000000000000L, 0x8000000000000000L,
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L,
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L
  )

  val BlackPawnMovePatterns: Array[BitBoard] = Array(
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L,
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L,
    0x0000000000000001L, 0x0000000000000002L, 0x0000000000000004L, 0x0000000000000008L,
    0x0000000000000010L, 0x0000000000000020L, 0x0000000000000040L, 0x0000000000000080L,
    0x0000000000000100L, 0x0000000000000200L, 0x0000000000000400L, 0x0000000000000800L,
    0x0000000000001000L, 0x0000000000002000L, 0x0000000000004000L, 0x0000000000008000L,
    0x0000000000010000L, 0x0000000000020000L, 0x0000000000040000L, 0x0000000000080000L,
    0x0000000000100000L, 0x0000000000200000L, 0x0000000000400000L, 0x0000000000800000L,
    0x0000000001000000L, 0x0000000002000000L, 0x0000000004000000L, 0x0000000008000000L,
    0x0000000010000000L, 0x0000000020000000L, 0x0000000040000000L, 0x0000000080000000L,
    0x0000000100000000L, 0x0000000200000000L, 0x0000000400000000L, 0x0000000800000000L,
    0x0000001000000000L, 0x0000002000000000L, 0x0000004000000000L, 0x0000008000000000L,
    0x0000010100000000L, 0x0000020200000000L, 0x0000040400000000L, 0x0000080800000000L,
    0x0000101000000000L, 0x0000202000000000L, 0x0000404000000000L, 0x0000808000000000L,
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L,
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L
  )

  val WhitePawnCapturePatterns: Array[BitBoard] = Array(
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L,
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L,
    0x0000000000020000L, 0x0000000000040000L, 0x0000000000080000L, 0x0000000000100000L,
    0x0000000000200000L, 0x0000000000400000L, 0x0000000000800000L, 0x0000000000000000L,
    0x0000000002000000L, 0x0000000004000000L, 0x0000000008000000L, 0x0000000010000000L,
    0x0000000020000000L, 0x0000000040000000L, 0x0000000080000000L, 0x0000000000000000L,
    0x0000000200000000L, 0x0000000400000000L, 0x0000000800000000L, 0x0000001000000000L,
    0x0000002000000000L, 0x0000004000000000L, 0x0000008000000000L, 0x0000000000000000L,
    0x0000020000000000L, 0x0000040000000000L, 0x0000080000000000L, 0x0000100000000000L,
    0x0000200000000000L, 0x0000400000000000L, 0x0000800000000000L, 0x0000000000000000L,
    0x0002000000000000L, 0x0004000000000000L, 0x0008000000000000L, 0x0010000000000000L,
    0x0020000000000000L, 0x0040000000000000L, 0x0080000000000000L, 0x0000000000000000L,
    0x0200000000000000L, 0x0400000000000000L, 0x0800000000000000L, 0x1000000000000000L,
    0x2000000000000000L, 0x4000000000000000L, 0x8000000000000000L, 0x0000000000000000L,
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L,
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L
  )

  val BlackPawnCapturePatterns: Array[BitBoard] = Array(
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L,
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L,
    0x0000000000000002L, 0x0000000000000004L, 0x0000000000000008L, 0x0000000000000010L,
    0x0000000000000020L, 0x0000000000000040L, 0x0000000000000080L, 0x0000000000000000L,
    0x0000000000000200L, 0x0000000000000400L, 0x0000000000000800L, 0x0000000000001000L,
    0x0000000000002000L, 0x0000000000004000L, 0x0000000000008000L, 0x0000000000000000L,
    0x0000000000020000L, 0x0000000000040000L, 0x0000000000080000L, 0x0000000000100000L,
    0x0000000000200000L, 0x0000000000400000L, 0x0000000000800000L, 0x0000000000000000L,
    0x0000000002000000L, 0x0000000004000000L, 0x0000000008000000L, 0x0000000010000000L,
    0x0000000020000000L, 0x0000000040000000L, 0x0000000080000000L, 0x0000000000000000L,
    0x0000000200000000L, 0x0000000400000000L, 0x0000000800000000L, 0x0000001000000000L,
    0x0000002000000000L, 0x0000004000000000L, 0x0000008000000000L, 0x0000000000000000L,
    0x0000020000000000L, 0x0000040000000000L, 0x0000080000000000L, 0x0000100000000000L,
    0x0000200000000000L, 0x0000400000000000L, 0x0000800000000000L, 0x0000000000000000L,
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L,
    0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L, 0x0000000000000000L
  )

  val RookMasks: Array[BitBoard] = Array(
    0x000101010101017EL, 0x000202020202027CL, 0x000404040404047AL, 0x0008080808080876L,
    0x001010101010106EL, 0x002020202020205EL, 0x004040404040403EL, 0x008080808080807EL,
    0x0001010101017E00L, 0x0002020202027C00L, 0x0004040404047A00L, 0x0008080808087600L,
    0x0010101010106E00L, 0x0020202020205E00L, 0x0040404040403E00L, 0x0080808080807E00L,
    0x00010101017E0100L, 0x00020202027C0200L, 0x00040404047A0400L, 0x0008080808760800L,
    0x00101010106E1000L, 0x00202020205E2000L, 0x00404040403E4000L, 0x00808080807E8000L,
    0x000101017E010100L, 0x000202027C020200L, 0x000404047A040400L, 0x0008080876080800L,
    0x001010106E101000L, 0x002020205E202000L, 0x004040403E404000L, 0x008080807E808000L,
    0x0001017E01010100L, 0x0002027C02020200L, 0x0004047A04040400L, 0x0008087608080800L,
    0x0010106E10101000L, 0x0020205E20202000L, 0x0040403E40404000L, 0x0080807E80808000L,
    0x00017E0101010100L, 0x00027C0202020200L, 0x00047A0404040400L, 0x0008760808080800L,
    0x00106E1010101000L, 0x00205E2020202000L, 0x00403E4040404000L, 0x00807E8080808000L,
    0x007E010101010100L, 0x007C020202020200L, 0x007A040404040400L, 0x0076080808080800L,
    0x006E101010101000L, 0x005E202020202000L, 0x003E404040404000L, 0x007E808080808000L,
    0x7E01010101010100L, 0x7C02020202020200L, 0x7A04040404040400L, 0x7608080808080800L,
    0x6E10101010101000L, 0x5E20202020202000L, 0x3E40404040404000L, 0x7E80808080808000L
  )

  val BishopMasks: Array[BitBoard] = Array(
    0x0040201008040200L, 0x0000402010080400L, 0x0000004020100A00L, 0x0000000040221400L,
    0x0000000002442800L, 0x0000000204085000L, 0x0000020408102000L, 0x0002040810204000L,
    0x0020100804020000L, 0x0040201008040000L, 0x00004020100A0000L, 0x0000004022140000L,
    0x0000000244280000L, 0x0000020408500000L, 0x0002040810200000L, 0x0004081020400000L,
    0x0010080402000200L, 0x0020100804000400L, 0x004020100A000A00L, 0x0000402214001400L,
    0x0000024428002800L, 0x0002040850005000L, 0x0004081020002000L, 0x0008102040004000L,
    0x0008040200020400L, 0x0010080400040800L, 0x0020100A000A1000L, 0x0040221400142200L,
    0x0002442800284400L, 0x0004085000500800L, 0x0008102000201000L, 0x0010204000402000L,
    0x0004020002040800L, 0x0008040004081000L, 0x00100A000A102000L, 0x0022140014224000L,
    0x0044280028440200L, 0x0008500050080400L, 0x0010200020100800L, 0x0020400040201000L,
    0x0002000204081000L, 0x0004000408102000L, 0x000A000A10204000L, 0x0014001422400000L,
    0x0028002844020000L, 0x0050005008040200L, 0x0020002010080400L, 0x0040004020100800L,
    0x0000020408102000L, 0x0000040810204000L, 0x00000A1020400000L, 0x0000142240000000L,
    0x0000284402000000L, 0x0000500804020000L, 0x0000201008040200L, 0x0000402010080400L,
    0x0002040810204000L, 0x0004081020400000L, 0x000A102040000000L, 0x0014224000000000L,
    0x0028440200000000L, 0x0050080402000000L, 0x0020100804020000L, 0x0040201008040200L
  )

  val RookMagic: Array[BitBoard] = Array(
    0x0A8002C000108020L, 0x06C00049B0002001L, 0x0100200010090040L, 0x2480041000800801L,
    0x0280028004000800L, 0x0900410008040022L, 0x0280020001001080L, 0x2880002041000080L,
    0xA000800080400034L, 0x0004808020004000L, 0x2290802004801000L, 0x0411000D00100020L,
    0x0402800800040080L, 0x000B000401004208L, 0x2409000100040200L, 0x0001002100004082L,
    0x0022878001E24000L, 0x1090810021004010L, 0x0801030040200012L, 0x0500808008001000L,
    0x0A08018014000880L, 0x8000808004000200L, 0x0201008080010200L, 0x0801020000441091L,
    0x0000800080204005L, 0x1040200040100048L, 0x0000120200402082L, 0x0D14880480100080L,
    0x0012040280080080L, 0x0100040080020080L, 0x9020010080800200L, 0x0813241200148449L,
    0x0491604001800080L, 0x0100401000402001L, 0x4820010021001040L, 0x0400402202000812L,
    0x0209009005000802L, 0x0810800601800400L, 0x4301083214000150L, 0x204026458E001401L,
    0x0040204000808000L, 0x8001008040010020L, 0x8410820820420010L, 0x1003001000090020L,
    0x0804040008008080L, 0x0012000810020004L, 0x1000100200040208L, 0x430000A044020001L,
    0x0280009023410300L, 0x00E0100040002240L, 0x0000200100401700L, 0x2244100408008080L,
    0x0008000400801980L, 0x0002000810040200L, 0x8010100228810400L, 0x2000009044210200L,
    0x4080008040102101L, 0x0040002080411D01L, 0x2005524060000901L, 0x0502001008400422L,
    0x489A000810200402L, 0x0001004400080A13L, 0x4000011008020084L, 0x0026002114058042L
  )

  val BishopMagic: Array[BitBoard] = Array(
    0x89A1121896040240L, 0x2004844802002010L, 0x2068080051921000L, 0x62880A0220200808L,
    0x0004042004000000L, 0x0100822020200011L, 0xC00444222012000AL, 0x0028808801216001L,
    0x0400492088408100L, 0x0201C401040C0084L, 0x00840800910A0010L, 0x0000082080240060L,
    0x2000840504006000L, 0x30010C4108405004L, 0x1008005410080802L, 0x8144042209100900L,
    0x0208081020014400L, 0x004800201208CA00L, 0x0F18140408012008L, 0x1004002802102001L,
    0x0841000820080811L, 0x0040200200A42008L, 0x0000800054042000L, 0x88010400410C9000L,
    0x0520040470104290L, 0x1004040051500081L, 0x2002081833080021L, 0x000400C00C010142L,
    0x941408200C002000L, 0x0658810000806011L, 0x0188071040440A00L, 0x4800404002011C00L,
    0x0104442040404200L, 0x0511080202091021L, 0x0004022401120400L, 0x80C0040400080120L,
    0x8040010040820802L, 0x0480810700020090L, 0x0102008E00040242L, 0x0809005202050100L,
    0x8002024220104080L, 0x0431008804142000L, 0x0019001802081400L, 0x0200014208040080L,
    0x3308082008200100L, 0x041010500040C020L, 0x4012020C04210308L, 0x208220A202004080L,
    0x0111040120082000L, 0x6803040141280A00L, 0x2101004202410000L, 0x8200000041108022L,
    0x0000021082088000L, 0x0002410204010040L, 0x0040100400809000L, 0x0822088220820214L,
    0x0040808090012004L, 0x00910224040218C9L, 0x0402814422015008L, 0x0090014004842410L,
    0x0001000042304105L, 0x0010008830412A00L, 0x2520081090008908L, 0x40102000A0A60140L
  )

  val RookAttackTable: Array[Array[BitBoard]]   = Array.ofDim(64, 4096)
  val BishopAttackTable: Array[Array[BitBoard]] = Array.ofDim(64, 512)

  {
    // Initialisation block for rook/bishop attacks
    // TODO: Load from resources
    val rookStream = getClass.getResourceAsStream("/RookAttackTable.dat")
    val bishopStream = getClass.getResourceAsStream("/BishopAttackTable.dat")
    (0 to 63).foreach { square =>
      val rookBytes = rookStream.readNBytes(4096 * 8)
      val bishopBytes = bishopStream.readNBytes(512 * 8)
      ByteBuffer.allocate(rookBytes.length).put(rookBytes).flip().order(ByteOrder.LITTLE_ENDIAN).asLongBuffer().get(RookAttackTable(square))
      ByteBuffer.allocate(bishopBytes.length).put(bishopBytes).flip().order(ByteOrder.LITTLE_ENDIAN).asLongBuffer().get(BishopAttackTable(square))
    }
  }
}
